//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerFrame
{
    float4x4 gView;                     // Offset:    0, size:   64
    float4x4 gProj;                     // Offset:   64, size:   64
}

//
// 2 local object(s)
//
Texture2D gTexture;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 2 technique(s)
    //
    technique11 TechTexture
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gView;                    // Offset:    0 Size:    64
                //   float4x4 gProj;                    // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // WORLD                    0   xyzw        3     NONE   float   xyzw
                // WORLD                    1   xyzw        4     NONE   float   xyzw
                // WORLD                    2   xyzw        5     NONE   float   xyzw
                // WORLD                    3   xyzw        6     NONE   float   xyzw
                // UVWORLD                  0   xyzw        7     NONE   float   xy  
                // UVWORLD                  1   xyzw        8     NONE   float   xy  
                // UVWORLD                  2   xyzw        9     NONE   float   xy  
                // UVWORLD                  3   xyzw       10     NONE   float   xy  
                // DIFFUSE                  0   xyzw       11     NONE   float   xyzw
                // SV_InstanceID            0   x          12   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // DIFFUSE                  0   xyzw        3     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xy
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xy
                dcl_input v8.xy
                dcl_input v9.xy
                dcl_input v10.xy
                dcl_input v11.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xy
                dcl_output o3.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.Pos.x; v0.y <- vin.Pos.y; v0.z <- vin.Pos.z; 
                //   v1.x <- vin.Color.x; v1.y <- vin.Color.y; v1.z <- vin.Color.z; v1.w <- vin.Color.w; 
                //   v2.x <- vin.Tex.x; v2.y <- vin.Tex.y; 
                //   v3.x <- vin.World._m00; v3.y <- vin.World._m01; v3.z <- vin.World._m02; v3.w <- vin.World._m03; 
                //   v4.x <- vin.World._m10; v4.y <- vin.World._m11; v4.z <- vin.World._m12; v4.w <- vin.World._m13; 
                //   v5.x <- vin.World._m20; v5.y <- vin.World._m21; v5.z <- vin.World._m22; v5.w <- vin.World._m23; 
                //   v6.x <- vin.World._m30; v6.y <- vin.World._m31; v6.z <- vin.World._m32; v6.w <- vin.World._m33; 
                //   v7.x <- vin.UvWorld._m00; v7.y <- vin.UvWorld._m01; v7.z <- vin.UvWorld._m02; v7.w <- vin.UvWorld._m03; 
                //   v8.x <- vin.UvWorld._m10; v8.y <- vin.UvWorld._m11; v8.z <- vin.UvWorld._m12; v8.w <- vin.UvWorld._m13; 
                //   v9.x <- vin.UvWorld._m20; v9.y <- vin.UvWorld._m21; v9.z <- vin.UvWorld._m22; v9.w <- vin.UvWorld._m23; 
                //   v10.x <- vin.UvWorld._m30; v10.y <- vin.UvWorld._m31; v10.z <- vin.UvWorld._m32; v10.w <- vin.UvWorld._m33; 
                //   v11.x <- vin.Diffuse.x; v11.y <- vin.Diffuse.y; v11.z <- vin.Diffuse.z; v11.w <- vin.Diffuse.w; 
                //   v12.x <- vin.InstanceId; 
                //   o3.x <- <VS return value>.Diffuse.x; o3.y <- <VS return value>.Diffuse.y; o3.z <- <VS return value>.Diffuse.z; o3.w <- <VS return value>.Diffuse.w; 
                //   o2.x <- <VS return value>.Tex.x; o2.y <- <VS return value>.Tex.y; 
                //   o1.x <- <VS return value>.Color.x; o1.y <- <VS return value>.Color.y; o1.z <- <VS return value>.Color.z; o1.w <- <VS return value>.Color.w; 
                //   o0.x <- <VS return value>.Pos.x; o0.y <- <VS return value>.Pos.y; o0.z <- <VS return value>.Pos.z; o0.w <- <VS return value>.Pos.w
                //
                #line 42 "D:\Projects\c++\asdf\RPG\RPG\Shader\SpriteInstanced.fx"
                mul r0.xyzw, v0.xxxx, v3.xyzw
                mul r1.xyzw, v0.yyyy, v4.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, v0.zzzz, v5.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, v6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.Pos.x; r0.y <- vout.Pos.y; r0.z <- vout.Pos.z; r0.w <- vout.Pos.w
                
                #line 43
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.Pos.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.Pos.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.Pos.z
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // r1.w <- vout.Pos.w
                
                #line 44
                dp4 r0.x, r1.xyzw, cb0[4].xyzw  // r0.x <- vout.Pos.x
                dp4 r0.y, r1.xyzw, cb0[5].xyzw  // r0.y <- vout.Pos.y
                dp4 r0.z, r1.xyzw, cb0[6].xyzw  // r0.z <- vout.Pos.z
                dp4 r0.w, r1.xyzw, cb0[7].xyzw  // r0.w <- vout.Pos.w
                
                #line 47
                mov r1.xyzw, v1.xyzw  // r1.x <- vout.Color.x; r1.y <- vout.Color.y; r1.z <- vout.Color.z; r1.w <- vout.Color.w
                
                #line 48
                mov r2.xyzw, v11.xyzw  // r2.x <- vout.Diffuse.x; r2.y <- vout.Diffuse.y; r2.z <- vout.Diffuse.z; r2.w <- vout.Diffuse.w
                
                #line 50
                mul r3.xy, v2.xxxx, v7.xyxx
                mul r3.zw, v2.yyyy, v8.xxxy
                add r3.xy, r3.zwzz, r3.xyxx
                mul r3.zw, v9.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
                add r3.xy, r3.zwzz, r3.xyxx
                mul r3.zw, v10.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                add r3.xy, r3.zwzz, r3.xyxx  // r3.x <- vout.Tex.x; r3.y <- vout.Tex.y
                
                #line 52
                mov o0.xyzw, r0.xyzw
                mov o1.xyzw, r1.xyzw
                mov o3.xyzw, r2.xyzw
                mov o2.xy, r3.xyxx
                ret 
                // Approximately 29 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samAnisotropic                    sampler      NA          NA             s0      1 
                // gTexture                          texture  float4          2d             t0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // COLOR                    0   xyzw        1     NONE   float       
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // DIFFUSE                  0   xyzw        3     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- pin.Pos.x; v0.y <- pin.Pos.y; v0.z <- pin.Pos.z; v0.w <- pin.Pos.w; 
                //   v1.x <- pin.Color.x; v1.y <- pin.Color.y; v1.z <- pin.Color.z; v1.w <- pin.Color.w; 
                //   v2.x <- pin.Tex.x; v2.y <- pin.Tex.y; 
                //   v3.x <- pin.Diffuse.x; v3.y <- pin.Diffuse.y; v3.z <- pin.Diffuse.z; v3.w <- pin.Diffuse.w; 
                //   o0.x <- <PS_Texture return value>.x; o0.y <- <PS_Texture return value>.y; o0.z <- <PS_Texture return value>.z; o0.w <- <PS_Texture return value>.w
                //
                #line 57 "D:\Projects\c++\asdf\RPG\RPG\Shader\SpriteInstanced.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
                mul o0.xyzw, r0.xyzw, v3.xyzw
                ret 
                // Approximately 3 instruction slots used
                            
            };
        }

    }

    technique11 TechColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gView;                    // Offset:    0 Size:    64
                //   float4x4 gProj;                    // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // WORLD                    0   xyzw        3     NONE   float   xyzw
                // WORLD                    1   xyzw        4     NONE   float   xyzw
                // WORLD                    2   xyzw        5     NONE   float   xyzw
                // WORLD                    3   xyzw        6     NONE   float   xyzw
                // UVWORLD                  0   xyzw        7     NONE   float   xy  
                // UVWORLD                  1   xyzw        8     NONE   float   xy  
                // UVWORLD                  2   xyzw        9     NONE   float   xy  
                // UVWORLD                  3   xyzw       10     NONE   float   xy  
                // DIFFUSE                  0   xyzw       11     NONE   float   xyzw
                // SV_InstanceID            0   x          12   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // DIFFUSE                  0   xyzw        3     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xy
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xy
                dcl_input v8.xy
                dcl_input v9.xy
                dcl_input v10.xy
                dcl_input v11.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xy
                dcl_output o3.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.Pos.x; v0.y <- vin.Pos.y; v0.z <- vin.Pos.z; 
                //   v1.x <- vin.Color.x; v1.y <- vin.Color.y; v1.z <- vin.Color.z; v1.w <- vin.Color.w; 
                //   v2.x <- vin.Tex.x; v2.y <- vin.Tex.y; 
                //   v3.x <- vin.World._m00; v3.y <- vin.World._m01; v3.z <- vin.World._m02; v3.w <- vin.World._m03; 
                //   v4.x <- vin.World._m10; v4.y <- vin.World._m11; v4.z <- vin.World._m12; v4.w <- vin.World._m13; 
                //   v5.x <- vin.World._m20; v5.y <- vin.World._m21; v5.z <- vin.World._m22; v5.w <- vin.World._m23; 
                //   v6.x <- vin.World._m30; v6.y <- vin.World._m31; v6.z <- vin.World._m32; v6.w <- vin.World._m33; 
                //   v7.x <- vin.UvWorld._m00; v7.y <- vin.UvWorld._m01; v7.z <- vin.UvWorld._m02; v7.w <- vin.UvWorld._m03; 
                //   v8.x <- vin.UvWorld._m10; v8.y <- vin.UvWorld._m11; v8.z <- vin.UvWorld._m12; v8.w <- vin.UvWorld._m13; 
                //   v9.x <- vin.UvWorld._m20; v9.y <- vin.UvWorld._m21; v9.z <- vin.UvWorld._m22; v9.w <- vin.UvWorld._m23; 
                //   v10.x <- vin.UvWorld._m30; v10.y <- vin.UvWorld._m31; v10.z <- vin.UvWorld._m32; v10.w <- vin.UvWorld._m33; 
                //   v11.x <- vin.Diffuse.x; v11.y <- vin.Diffuse.y; v11.z <- vin.Diffuse.z; v11.w <- vin.Diffuse.w; 
                //   v12.x <- vin.InstanceId; 
                //   o3.x <- <VS return value>.Diffuse.x; o3.y <- <VS return value>.Diffuse.y; o3.z <- <VS return value>.Diffuse.z; o3.w <- <VS return value>.Diffuse.w; 
                //   o2.x <- <VS return value>.Tex.x; o2.y <- <VS return value>.Tex.y; 
                //   o1.x <- <VS return value>.Color.x; o1.y <- <VS return value>.Color.y; o1.z <- <VS return value>.Color.z; o1.w <- <VS return value>.Color.w; 
                //   o0.x <- <VS return value>.Pos.x; o0.y <- <VS return value>.Pos.y; o0.z <- <VS return value>.Pos.z; o0.w <- <VS return value>.Pos.w
                //
                #line 42 "D:\Projects\c++\asdf\RPG\RPG\Shader\SpriteInstanced.fx"
                mul r0.xyzw, v0.xxxx, v3.xyzw
                mul r1.xyzw, v0.yyyy, v4.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, v0.zzzz, v5.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, v6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.Pos.x; r0.y <- vout.Pos.y; r0.z <- vout.Pos.z; r0.w <- vout.Pos.w
                
                #line 43
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.Pos.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.Pos.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.Pos.z
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // r1.w <- vout.Pos.w
                
                #line 44
                dp4 r0.x, r1.xyzw, cb0[4].xyzw  // r0.x <- vout.Pos.x
                dp4 r0.y, r1.xyzw, cb0[5].xyzw  // r0.y <- vout.Pos.y
                dp4 r0.z, r1.xyzw, cb0[6].xyzw  // r0.z <- vout.Pos.z
                dp4 r0.w, r1.xyzw, cb0[7].xyzw  // r0.w <- vout.Pos.w
                
                #line 47
                mov r1.xyzw, v1.xyzw  // r1.x <- vout.Color.x; r1.y <- vout.Color.y; r1.z <- vout.Color.z; r1.w <- vout.Color.w
                
                #line 48
                mov r2.xyzw, v11.xyzw  // r2.x <- vout.Diffuse.x; r2.y <- vout.Diffuse.y; r2.z <- vout.Diffuse.z; r2.w <- vout.Diffuse.w
                
                #line 50
                mul r3.xy, v2.xxxx, v7.xyxx
                mul r3.zw, v2.yyyy, v8.xxxy
                add r3.xy, r3.zwzz, r3.xyxx
                mul r3.zw, v9.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
                add r3.xy, r3.zwzz, r3.xyxx
                mul r3.zw, v10.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                add r3.xy, r3.zwzz, r3.xyxx  // r3.x <- vout.Tex.x; r3.y <- vout.Tex.y
                
                #line 52
                mov o0.xyzw, r0.xyzw
                mov o1.xyzw, r1.xyzw
                mov o3.xyzw, r2.xyzw
                mov o2.xy, r3.xyxx
                ret 
                // Approximately 29 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                // TEXCOORD                 0   xy          2     NONE   float       
                // DIFFUSE                  0   xyzw        3     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_input_ps linear v1.xyzw
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                //
                // Initial variable locations:
                //   v0.x <- pin.Pos.x; v0.y <- pin.Pos.y; v0.z <- pin.Pos.z; v0.w <- pin.Pos.w; 
                //   v1.x <- pin.Color.x; v1.y <- pin.Color.y; v1.z <- pin.Color.z; v1.w <- pin.Color.w; 
                //   v2.x <- pin.Tex.x; v2.y <- pin.Tex.y; 
                //   v3.x <- pin.Diffuse.x; v3.y <- pin.Diffuse.y; v3.z <- pin.Diffuse.z; v3.w <- pin.Diffuse.w; 
                //   o0.x <- <PS_Color return value>.x; o0.y <- <PS_Color return value>.y; o0.z <- <PS_Color return value>.z; o0.w <- <PS_Color return value>.w
                //
                #line 62 "D:\Projects\c++\asdf\RPG\RPG\Shader\SpriteInstanced.fx"
                mul o0.xyzw, v1.xyzw, v3.xyzw
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

}

